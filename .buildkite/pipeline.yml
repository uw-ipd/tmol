test_agent: &cuda_test_agent
  agents:
    queue: cuda

test_agent: &cpu_test_agent
  agents:
    queue: nocuda

steps:
  ### Test installation from source
  # Note that this tests setup and *does not* modify the runtime environment below.
  - label: ':electric_plug: Setup'
    command: .buildkite/bin/setup
    << : *cuda_test_agent

  ### Wait on setup to allow image build to complete before further, potentially parallel steps
  - wait: ~
    continue_on_failure: true

  ### Run formatting/linting checks.
  - label: ':microscope: Linting'
    command: .buildkite/bin/linting
    << : *cuda_test_agent

  ### Run tests and generate coverage reports
  - label: ':shrug: Testing - CPU'
    command: .buildkite/bin/testing --cov=./tmol --junitxml=testing.cpu.junit.xml
    artifact_paths:
      - testing.cpu.junit.xml
      - .coverage
    << : *cpu_test_agent

  ### Run tests and generate coverage reports
  - label: ':shrug: Testing - CUDA'
    command: .buildkite/bin/testing --cov=./tmol --junitxml=testing.cuda.junit.xml
    artifact_paths:
      - testing.cuda.junit.xml
      - .coverage
    << : *cuda_test_agent

  ### Run tests w/o numba jitting and generate coverage reports
  - label: ':shrug: Testing - CPU debug, w/o jit'
    command: .buildkite/bin/testing_debug_no_jit --cov=./tmol --junitxml=testing.cpu.junit.xml
    artifact_paths:
      - testing.cpunojit.junit.xml
      - .coverage
    << : *cpu_test_agent

  ### Run benchmark tests
  - label: ':racehorse: Benchmark'
    command: .buildkite/bin/benchmark --benchmark-max-time=.1 
    artifact_paths:
      - benchmark/**/*
    << : *cuda_test_agent

  ### Wait for all tests to finish and upload artifacts
  - wait: ~
    continue_on_failure: true

  - label: ':clipboard: Report'
    plugins:
      - bugcrowd/test-summary#master:
          inputs:
            - label: Testing - CUDA
              artifact_path: testing.cuda.junit.xml
              type: junit
            - label: Testing - CPU
              artifact_path: testing.cpu.junit.xml
              type: junit
          formatter:
              type: details
          run_without_docker: True
    << : *cuda_test_agent

  - label: ':broom: Cleanup'
    command: .buildkite/bin/cleanup
    << : *cuda_test_agent

  # Disable gh-pages as docs are disabled.
  ### Deploy documentation to gh-pages iff running a master build
  #- label: ':rocket: Pages'
  #  command: .buildkite/bin/gh-pages
  #  plugins:
  #    artifacts#v1.2.0:
  #      download: "docs/_build/**/*"
  #  << : *test_agent
