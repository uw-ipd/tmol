steps:
  ### Test installation from source
  # Note that this tests setup and *does not* modify the runtime environment below.
  - label: ':electric_plug: Setup'
    command: .buildkite/bin/setup
    plugins:
      uw-ipd/docker-compose#run_workdir:
        run: buildkite
        workdir: "${BUILDKITE_BUILD_CHECKOUT_PATH}"


  ### Run tests and generate coverage reports
  - label: ':shrug: Testing - CUDA'
    command: .buildkite/bin/testing --cov=./tmol --junitxml=testing.cuda.junit.xml

    plugins:
      uw-ipd/docker-compose#run_workdir:
        run: buildkite
        workdir: "${BUILDKITE_BUILD_CHECKOUT_PATH}"
    artifact_paths:
      - testing.cuda.junit.xml
      - .coverage

  ### Run tests and generate coverage reports
  - label: ':shrug: Testing - CPU'
    command: .buildkite/bin/testing --cov=./tmol --junitxml=testing.cpu.junit.xml
    plugins:
      uw-ipd/docker-compose#run_workdir:
        run: buildkite-cpu
        workdir: "${BUILDKITE_BUILD_CHECKOUT_PATH}"
    artifact_paths:
      - testing.cpu.junit.xml
      - .coverage

  ### Run formatting/linting checks.
  - label: ':microscope: Linting'
    command: .buildkite/bin/linting --junitxml=linting.junit.xml
    plugins:
      uw-ipd/docker-compose#run_workdir:
        run: buildkite
        workdir: "${BUILDKITE_BUILD_CHECKOUT_PATH}"
    artifact_paths:
      - linting.junit.xml

  - label: ':clipboard: Report'
    plugins:
      uw-ipd/test-summary#8fa3c9a:
        inputs:
          - label: Testing - CUDA
            artifact_path: testing.cuda.junit.xml
            type: junit
          - label: Testing - CPU
            artifact_path: testing.cpu.junit.xml
            type: junit
          - label: Linting
            artifact_path: linting.junit.xml
            type: junit
        formatter:
          type: details

  ### Run benchmark tests
  - label: ':racehorse: Benchmark'
    command: .buildkite/bin/benchmark --benchmark-max-time=.1 
    artifact_paths:
      - benchmark/**/*
    plugins:
      uw-ipd/docker-compose#run_workdir:
        run: buildkite
        workdir: "${BUILDKITE_BUILD_CHECKOUT_PATH}"
